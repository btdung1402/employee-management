stages:
  - build-frontend
  - build-backend
  - deploy

services:
  - name: mysql:latest
    alias: mysql
    variables:
      MYSQL_DATABASE: employee_management_db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

variables:
  DB_URL_EM: jdbc:mysql://mysql:3306/employee_management_db
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  EXPIRATION: ${EXPIRATION}
  SECRET_KEY: ${SECRET_KEY}

build-frontend:
  stage: build-frontend
  image: node:20.17
  script:
    - echo "Starting frontend build"
    - cd frontend
    - echo "Installing dependencies"
    - npm install
    - echo "Building frontend"
    - npm run build
  artifacts:
    paths:
      - frontend/dest/
    expire_in: 1 week

build-backend:
  stage: build-backend
  image: maven:latest
  script:
    - echo "Starting backend build"
    - cd backend
    - echo "Building backend application"
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - backend/target/*.jar
    expire_in: 1 week

deploy:
  stage: deploy
  image: openjdk:17
  dependencies:
    - build-frontend
    - build-backend
  script:
    - echo "Starting deployment"
    - echo "Deploying backend"
    - cp backend/target/*.jar ./app.jar
    - java -jar app.jar --spring.datasource.url=$DB_URL_EM --spring.datasource.username=$DB_USERNAME --spring.datasource.password=$DB_PASSWORD &
    - echo "Deploying frontend"
    - cp -r frontend/dist/* /var/www/html/
    - echo "Deployment completed"
